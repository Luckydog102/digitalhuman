import os
import torch
from openvoice import se_extractor
from openvoice.api import BaseSpeakerTTS, ToneColorConverter

# ckpt_base = 'checkpoints/base_speakers/EN'
# ckpt_converter = 'checkpoints/converter'
# device="cuda:0" if torch.cuda.is_available() else "cpu"
# output_dir = 'outputs'

# base_speaker_tts = BaseSpeakerTTS(f'{ckpt_base}/config.json', device=device)
# base_speaker_tts.load_ckpt(f'{ckpt_base}/checkpoint.pth')

# tone_color_converter = ToneColorConverter(f'{ckpt_converter}/config.json', device=device)
# tone_color_converter.load_ckpt(f'{ckpt_converter}/checkpoint.pth')

# os.makedirs(output_dir, exist_ok=True)

# source_se = torch.load(f'{ckpt_base}/en_default_se.pth').to(device)

# reference_speaker = 'resources/example_reference.mp3' # This is the voice you want to clone
# target_se, audio_name = se_extractor.get_se(reference_speaker, tone_color_converter, target_dir='processed', vad=True)


# save_path = f'{output_dir}/output_en_default.wav'

# Run the base speaker tts
# text = "Hello, Hello! This audio is generated by OpenVoice."
# src_path = f'{output_dir}/tmp.wav'
# base_speaker_tts.tts(text, src_path, speaker='default', language='English', speed=1.0)

# # Run the tone color converter
# encode_message = "@MyShell"
# tone_color_converter.convert(
#     audio_src_path=src_path, 
#     src_se=source_se, 
#     tgt_se=target_se, 
#     output_path=save_path,
#     message=encode_message)



ckpt_base = 'checkpoints/base_speakers/ZH'
ckpt_converter = 'checkpoints/converter'
device="cuda:0" if torch.cuda.is_available() else "cpu"
output_dir = 'outputs'

tone_color_converter = ToneColorConverter(f'{ckpt_converter}/config.json', device=device)
tone_color_converter.load_ckpt(f'{ckpt_converter}/checkpoint.pth')

base_speaker_tts = BaseSpeakerTTS(f'{ckpt_base}/config.json', device=device)
base_speaker_tts.load_ckpt(f'{ckpt_base}/checkpoint.pth')

source_se = torch.load(f'{ckpt_base}/zh_default_se.pth').to(device)
save_path = f'{output_dir}/output_chinese.wav'

reference_speaker = 'resources/output.wav'          
# format: wav, mp3
# reference_speaker = 'resources/demo_speaker1.mp3' # This is the voice you want to clone
target_se, audio_name = se_extractor.get_se(reference_speaker, tone_color_converter, target_dir='processed', vad=True)

# Run the base speaker tts
# text = "今天天气真好，我们一起出去吃饭吧。"
text = "哈哈哈哈哈。请于2023年11月1日起登录福建“海纳百川”人才网引进生专区(http://fjhnbc.hxrc.com/yjs)注册报名，报名时间截止至11月21日18:00。"
src_path = f'{output_dir}/tmp.wav'
base_speaker_tts.tts(text, src_path, speaker='default', language='Chinese', speed=1.0)

# Run the tone color converter
encode_message = "@MyShell"
tone_color_converter.convert(
    audio_src_path=src_path, 
    src_se=source_se, 
    tgt_se=target_se, 
    output_path=save_path,
    message=encode_message)